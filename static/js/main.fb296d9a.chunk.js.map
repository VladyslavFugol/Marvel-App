{"version":3,"sources":["hooks/http.hook.js","services/MarvelService.js","components/errorMessage/error.gif","components/errorMessage/ErrorMessage.js","components/spinner/Spinner.js","resources/img/mjolnir.png","components/randomChar/RandomChar.js","components/charList/CharList.js","components/skeleton/Skeleton.js","components/charInfo/CharInfo.js","components/charSearchForm/CharSearchForm.js","resources/img/vision.png","components/errorBoundary/ErrorBoundary.js","components/pages/MainPage.js","resources/img/Avengers.png","resources/img/Avengers_logo.png","components/appBanner/AppBanner.js","components/comicsList/ComicsList.js","components/pages/ComicsPage.js","components/pages/SinglePage.js","components/pages/singleComicLayout/SingleComicLayout.js","components/pages/singleCharacterLayout/SingleCharacterLayout.js","components/appHeader/AppHeader.js","components/app/App.js","index.js"],"names":["useHttp","useState","loading","setLoading","error","setError","getData","useCallback","url","a","method","body","headers","fetch","response","ok","Error","status","json","data","message","clearError","useMarvelService","_api","_apiKey","getAllCharacters","offset","res","results","map","_transformCharacter","getAllComics","_transformComics","getCharacter","id","getCharacterByName","name","getComic","character","description","slice","thumbnail","path","extension","homepage","urls","wiki","comics","items","title","pageCount","language","textObjects","price","prices","ErrorMessage","src","img","alt","style","display","width","height","objectFit","margin","Spinner","xmlns","background","viewBox","preserveAspectRatio","transform","cx","cy","r","fill","fillOpacity","attributeName","type","begin","values","keyTimes","dur","repeatCount","View","char","imgStyle","className","href","RandomChar","setChar","useEffect","updateChar","onCharLoaded","Math","floor","random","then","errorMessage","spinner","content","onClick","mjolnir","CharList","onCharSelected","charList","setCharList","isNewItemLoaded","setIsNewItemLoaded","setOffset","charEnded","setCharEnded","onRequest","initial","onCharsLoaded","newCharList","ended","length","itemsRefs","useRef","index","current","forEach","item","classList","remove","add","focus","focusOnItem","ref","element","includes","disabled","Skeleton","isImageUpload","CharInfo","charId","skeleton","CharSearchForm","console","log","to","initialValues","charName","validationSchema","Yup","required","onSubmit","htmlFor","placeholder","component","ErrorBoundary","state","errorInfo","this","setState","props","children","Component","MainPage","selectedCharId","setSelectedCharId","decoration","AppBanner","avengers","avengersLogo","ComicsList","comicsList","setComicsList","newItemLoaded","setNewItemLoaded","isListEnded","setIsListEnded","onComicsLoaded","newComicsList","ComicsPage","SinglePage","dataType","useParams","setData","updateData","onDataLoaded","SingleComicLayout","SingleCharacterLayout","AppHeader","exact","activeStyle","color","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.fb296d9a.chunk.js","sourcesContent":["import { useCallback, useState } from 'react'\n\nfunction useHttp() {\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState(null)\n\n  const getData = useCallback(async (url, method = 'GET', body = null, headers = {'Content-Type': 'application/json'}) => {\n\n    setLoading(true)\n\n    try {\n      const response = await fetch(url, {method, body, headers})\n\n      if (!response.ok) {\n        throw new Error(`Could not fetch ${url}, status: ${response.status}`)\n      }\n\n      const data = await response.json()\n\n      setLoading(false)\n\n      return data\n    } catch (error) {\n      setLoading(false)\n      setError(error.message)\n      throw error\n    }\n  }, [])\n\n  const clearError = useCallback(() => setError(null), [])\n\n  return {loading, error, getData, clearError}\n}\n\nexport default useHttp\n\n","import useHttp from '../hooks/http.hook'\n\nfunction useMarvelService() {\n  const _api = 'https://gateway.marvel.com:443/v1/public/'\n  const _apiKey = 'apikey=c92dd8fa67e10ba4d2219790d46ab29f'\n  const _baseOffset = 210\n\n  const { loading, error, getData, clearError } = useHttp()\n\n  const getAllCharacters = async (offset = _baseOffset) => {\n    const res = await getData(`${_api}characters?limit=9&offset=${offset}&${_apiKey}`)\n    return res.data.results.map(_transformCharacter)\n  }\n\n  const getAllComics = async (offset = 0) => {\n    const res = await getData(`${_api}comics?limit=8&offset=${offset}&${_apiKey}`)\n    return res.data.results.map(_transformComics)\n  }\n\n  const getCharacter = async (id) => {\n    const res = await getData(`${_api}characters/${id}?${_apiKey}`)\n    return _transformCharacter(res.data.results[0])\n  }\n\n  const getCharacterByName = async (name) => {\n    const res = await getData(`${_api}characters?name=${name}&${_apiKey}`);\n    return res.data.results.map(_transformCharacter);\n  }\n\n  const getComic = async (id) => {\n    const res = await getData(`${_api}comics/${id}?${_apiKey}`)\n    return _transformComics(res.data.results[0])\n  }\n\n  const _transformCharacter = (character) => {\n    return {\n      name: character.name,\n      id: character.id,\n      description: character.description ? `${character.description.slice(0, 210)}...` : 'There is no description for this character',\n      thumbnail: character.thumbnail.path + '.' + character.thumbnail.extension,\n      homepage: character.urls[0].url,\n      wiki: character.urls[1].url,\n      comics: character.comics.items\n    }\n  }\n\n  const _transformComics = (comics) => {\n    return {\n      id: comics.id,\n      title: comics.title,\n      description: comics.description || 'There is no description',\n      pageCount: comics.pageCount ? `${comics.pageCount} p.` : 'No information about the number of pages',\n      thumbnail: comics.thumbnail.path + '.' + comics.thumbnail.extension,\n      language: comics.textObjects.language || 'en-us',\n      price: comics.prices[0].price ? `${comics.prices[0].price}$` : 'not available'\n    }\n  }\n\n  return {\n    loading,\n    error,\n    clearError,\n    getAllCharacters,\n    getCharacter,\n    getAllComics,\n    getComic,\n    getCharacterByName\n  }\n}\n\nexport default useMarvelService\n","export default __webpack_public_path__ + \"static/media/error.42292aa1.gif\";","import img from './error.gif'\n\nfunction ErrorMessage() {\n  return (\n    <img src={img} alt='error' style={{\n      display: 'block',\n      width: '250px',\n      height: '250px',\n      objectFit: 'contain',\n      margin: '0 auto'\n    }}/>\n  )\n}\n\nexport default ErrorMessage\n\n","const Spinner = () => {\n  return (\n    <svg xmlns=\"http://www.w3.org/2000/svg\"\n         style={{margin: '0 auto', background: 'none', display: 'block'}} width=\"200px\"\n         height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n      <g transform=\"translate(80,50)\">\n        <g transform=\"rotate(0)\">\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"1\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.875s\"\n                              values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\"\n                              repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"\n                     values=\"1;0\" begin=\"-0.875s\"></animate>\n          </circle>\n        </g>\n      </g>\n      <g transform=\"translate(71.21320343559643,71.21320343559643)\">\n        <g transform=\"rotate(45)\">\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.875\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.75s\"\n                              values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\"\n                              repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"\n                     values=\"1;0\" begin=\"-0.75s\"></animate>\n          </circle>\n        </g>\n      </g>\n      <g transform=\"translate(50,80)\">\n        <g transform=\"rotate(90)\">\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.75\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.625s\"\n                              values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\"\n                              repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"\n                     values=\"1;0\" begin=\"-0.625s\"></animate>\n          </circle>\n        </g>\n      </g>\n      <g transform=\"translate(28.786796564403577,71.21320343559643)\">\n        <g transform=\"rotate(135)\">\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.625\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.5s\"\n                              values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\"\n                              repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"\n                     values=\"1;0\" begin=\"-0.5s\"></animate>\n          </circle>\n        </g>\n      </g>\n      <g transform=\"translate(20,50.00000000000001)\">\n        <g transform=\"rotate(180)\">\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.5\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\"\n                              values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\"\n                              repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"\n                     values=\"1;0\" begin=\"-0.375s\"></animate>\n          </circle>\n        </g>\n      </g>\n      <g transform=\"translate(28.78679656440357,28.786796564403577)\">\n        <g transform=\"rotate(225)\">\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.375\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\"\n                              values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\"\n                              repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"\n                     values=\"1;0\" begin=\"-0.25s\"></animate>\n          </circle>\n        </g>\n      </g>\n      <g transform=\"translate(49.99999999999999,20)\">\n        <g transform=\"rotate(270)\">\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.25\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\"\n                              values=\"1.5 1.5;1 1\" keyTimes=\"0;1\" dur=\"1s\"\n                              repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"\n                     values=\"1;0\" begin=\"-0.125s\"></animate>\n          </circle>\n        </g>\n      </g>\n      <g transform=\"translate(71.21320343559643,28.78679656440357)\">\n        <g transform=\"rotate(315)\">\n          <circle cx=\"0\" cy=\"0\" r=\"7\" fill=\"#1c4595\" fillOpacity=\"0.125\">\n            <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" values=\"1.5 1.5;1 1\"\n                              keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"></animateTransform>\n            <animate attributeName=\"fillOpacity\" keyTimes=\"0;1\" dur=\"1s\" repeatCount=\"indefinite\"\n                     values=\"1;0\" begin=\"0s\"></animate>\n          </circle>\n        </g>\n      </g>\n    </svg>\n  )\n}\n\nexport default Spinner;\n","export default __webpack_public_path__ + \"static/media/mjolnir.61f31e18.png\";","import { useEffect, useState } from 'react'\n\nimport useMarvelService from '../../services/MarvelService'\nimport ErrorMessage from '../errorMessage/ErrorMessage'\nimport Spinner from '../spinner/Spinner'\n\nimport mjolnir from '../../resources/img/mjolnir.png'\n\nimport './randomChar.scss'\n\nfunction RandomChar() {\n  const [char, setChar] = useState({})\n\n  useEffect(() => {\n    updateChar()\n  }, [])\n\n  const { loading, error, clearError, getCharacter } = useMarvelService()\n\n  const onCharLoaded = (char) => {\n    setChar(char)\n  }\n\n  const updateChar = () => {\n    clearError()\n    const id = Math.floor(Math.random() * (1011400 - 1011000) + 1011000)\n    getCharacter(id)\n      .then(onCharLoaded)\n  }\n\n  const errorMessage = error ? <ErrorMessage/> : null\n  const spinner = loading ? <Spinner/> : null\n  const content = !(loading || error) ? <View char={char}/> : null\n  return (\n    <div className='randomchar'>\n      {errorMessage}\n      {spinner}\n      {content}\n      <div className='randomchar__static'>\n        <p className='randomchar__title'>\n          Random character for today!<br/>\n          Do you want to get to know him better?\n        </p>\n        <p className='randomchar__title'>\n          Or choose another one\n        </p>\n        <button className='button button__main'>\n          <div className='inner' onClick={updateChar}>try it</div>\n        </button>\n        <img src={mjolnir} alt='mjolnir' className='randomchar__decoration'/>\n      </div>\n    </div>\n  )\n}\n\nconst View = ({ char }) => {\n  const { name, description, thumbnail, homepage, wiki } = char\n  const isThumbnail = thumbnail === 'http://i.annihil.us/u/prod/marvel/i/mg/b/40/image_not_available.jpg'\n\n  let imgStyle = {'objectFit': 'cover'}\n  if (isThumbnail) {\n    imgStyle = {'objectFit': 'contain'}\n  }\n  return (\n    <div className='randomchar__block'>\n      <img\n        src={thumbnail}\n        style={imgStyle}\n        alt='Random character'\n        className='randomchar__img'\n      />\n      <div className='randomchar__info'>\n        <p className='randomchar__name'>{name}</p>\n        <p className='randomchar__descr'>{description}</p>\n        <div className='randomchar__btns'>\n          <a href={homepage} className='button button__main'>\n            <div className='inner'>homepage</div>\n          </a>\n          <a href={wiki} className='button button__secondary'>\n            <div className='inner'>Wiki</div>\n          </a>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default RandomChar\n","import { useEffect, useRef, useState } from 'react'\n\nimport Spinner from '../spinner/Spinner'\nimport ErrorMessage from '../errorMessage/ErrorMessage'\nimport useMarvelService from '../../services/MarvelService'\n\nimport PropTypes from 'prop-types'\n\nimport './charList.scss'\n\nfunction CharList({ onCharSelected }) {\n\n  const [charList, setCharList] = useState([])\n  const [isNewItemLoaded, setIsNewItemLoaded] = useState(false)\n  const [offset, setOffset] = useState(210)\n  const [charEnded, setCharEnded] = useState(false)\n\n  const { error, loading, getAllCharacters } = useMarvelService()\n\n  useEffect(() => {\n    onRequest(offset, true)\n  }, [])\n\n  const onRequest = (offset, initial) => {\n    initial ? setIsNewItemLoaded(false) : setIsNewItemLoaded(true)\n    getAllCharacters(offset)\n      .then(onCharsLoaded)\n  }\n\n  const onCharsLoaded = (newCharList) => {\n    let ended = false\n\n    if (newCharList.length < 9) {\n      ended = true\n    }\n\n    setCharList(charList => [...charList, ...newCharList])\n    setIsNewItemLoaded(isNewItemLoaded => false)\n    setOffset(offset => offset + 9)\n    setCharEnded(ended)\n  }\n\n  const itemsRefs = useRef([])\n\n  const focusOnItem = (index) => {\n    itemsRefs.current.forEach(item => item.classList.remove('char__item_selected'))\n    itemsRefs.current[index].classList.add('char__item_selected')\n    itemsRefs.current[index].focus()\n  }\n\n  const renderItems = (arr) => {\n    return arr.map(({thumbnail, name, id}, index) => (\n      <li\n        className='char__item'\n        key={id}\n        onClick={() => {\n          onCharSelected(id)\n          focusOnItem(index)\n        }} ref={element => itemsRefs.current[index] = element}>\n        <img src={thumbnail}\n             style={thumbnail.includes('image_not_available') ?\n               {objectFit: 'contain'} : {objectFit: 'cover'}}\n             alt='abyss'/>\n        <div className='char__name'>{name}</div>\n      </li>\n    ))\n  }\n\n  const spinner = loading && !isNewItemLoaded ? <Spinner/> : null\n  const errorMessage = error ? <ErrorMessage/> : null\n  const content = renderItems(charList)\n  return (\n    <div className='char__list'>\n      {spinner}\n      {errorMessage}\n      <ul className='char__grid'>\n        {content}\n      </ul>\n      <button\n        className='button button__main button__long'\n        disabled={isNewItemLoaded}\n        onClick={() => onRequest(offset)}\n        style={{display: charEnded ? 'none' : 'block'}}\n      >\n        <div className='inner'>load more</div>\n      </button>\n    </div>\n  )\n}\n\nCharList.propTypes = {\n  onCharSelected: PropTypes.func.isRequired\n}\n\nexport default CharList\n","import './skeleton.scss'\n\nconst Skeleton = () => {\n  return (\n    <>\n      <p className='char__select'>Please select a character to see information</p>\n      <div className='skeleton'>\n        <div className='pulse skeleton__header'>\n          <div className='pulse skeleton__circle'></div>\n          <div className='pulse skeleton__mini'></div>\n        </div>\n        <div className='pulse skeleton__block'></div>\n        <div className='pulse skeleton__block'></div>\n        <div className='pulse skeleton__block'></div>\n      </div>\n    </>\n  )\n}\n\nexport default Skeleton;\n","import { useEffect, useState } from 'react'\n\nimport useMarvelService from '../../services/MarvelService'\nimport Spinner from '../spinner/Spinner'\nimport ErrorMessage from '../errorMessage/ErrorMessage'\nimport Skeleton from '../skeleton/Skeleton'\n\nimport PropTypes from 'prop-types'\n\nimport './charInfo.scss'\n\nfunction CharInfo({ charId }) {\n  const [char, setChar] = useState(null)\n\n  const { loading, error, clearError, getCharacter } = useMarvelService()\n\n  useEffect(() => {\n    updateChar()\n  }, [charId])\n\n  const onCharLoaded = (char) => {\n    setChar(char)\n  }\n\n  const updateChar = () => {\n    if (!charId) return\n\n    clearError()\n    getCharacter(charId)\n      .then(onCharLoaded)\n  }\n\n  const spinner = loading ? <Spinner/> : null\n  const errorMessage = error ? <ErrorMessage/> : null\n  const content = !(loading || error || !char) ? <View char={char}/> : null\n  const skeleton = loading || error || char ? null : <Skeleton/>\n\n  return (\n    <div className='char__info'>\n      {skeleton}\n      {errorMessage}\n      {spinner}\n      {content}\n    </div>\n  )\n}\n\nconst View = ({ char }) => {\n  const { name, thumbnail, description, homepage, wiki, comics } = char\n  const isImageUpload = thumbnail.includes('image_not_available') ?\n    {objectFit: 'contain'} : {objectFit: 'cover'}\n\n  return (\n    <>\n      <div className='char__basics'>\n        <img src={thumbnail} alt={name} style={isImageUpload}/>\n        <div>\n          <div className='char__info-name'>{name}</div>\n          <div className='char__btns'>\n            <a href={homepage} className='button button__main'>\n              <div className='inner'>homepage</div>\n            </a>\n            <a href={wiki} className='button button__secondary'>\n              <div className='inner'>Wiki</div>\n            </a>\n          </div>\n        </div>\n      </div>\n      <div className='char__descr'>\n        {description}\n      </div>\n      <div className='char__comics'>Comics:</div>\n      <ul className='char__comics-list'>\n        {comics.length > 0 ? null : 'There is no comics with this character'}\n        {comics.map((comics, index) => index < 10 ? (\n          <li key={index} className='char__comics-item'>\n            {comics.name}\n          </li>\n        ) : null)}\n      </ul>\n    </>\n  )\n}\n\nCharInfo.propTypes = {\n  charId: PropTypes.number\n}\n\nexport default CharInfo\n","import { useState } from 'react'\n\nimport { Formik, Form, Field, ErrorMessage as FormikErrorMessage } from 'formik'\nimport * as Yup from 'yup'\nimport { Link } from 'react-router-dom'\n\nimport ErrorMessage from '../errorMessage/ErrorMessage'\nimport useMarvelService from '../../services/MarvelService'\n\nimport './charSearchForm.scss'\n\nfunction CharSearchForm() {\n  const [char, setChar] = useState(null)\n\n  const { error, loading, clearError, getCharacterByName } = useMarvelService()\n\n  const onCharLoaded = (char) => {\n    setChar(char)\n    console.log(char)\n  }\n\n  const updateChar = (name) => {\n    clearError()\n\n    getCharacterByName(name)\n      .then(onCharLoaded)\n  }\n\n  const errorMessage = error ?\n    <div className=\"char__search-critical-error\"><ErrorMessage/></div> : null;\n\n  const results = !char ? null : char.length ?\n    <div className=\"char__search-wrapper\">\n      <div className=\"char__search-success\">There is! Visit {char[0].name} page?</div>\n      <Link to={`/characters/${char[0].id}`} className=\"button button__secondary\">\n        <div className=\"inner\">To page</div>\n      </Link>\n    </div> :\n    <div className=\"char__search-error\">\n      The character was not found. Check the name and try again\n    </div>\n\n  return (\n    <div className=\"char__search-form\">\n      <Formik\n        initialValues={{\n          charName: ''\n        }}\n        validationSchema={Yup.object({\n          charName: Yup.string().required('This field is required')\n        })}\n        onSubmit={({ charName }) => {\n          updateChar(charName)\n        }}\n      >\n        <Form>\n          <label\n            className=\"char__search-label\"\n            htmlFor=\"charName\">\n            Or find a character by name:\n          </label>\n          <div className=\"char__search-wrapper\">\n            <Field\n              id=\"charName\"\n              name='charName'\n              type='text'\n              placeholder=\"Enter name\"/>\n            <button\n              type='submit'\n              className=\"button button__main\"\n              disabled={loading}>\n              <div className=\"inner\">find</div>\n            </button>\n          </div>\n          <FormikErrorMessage\n            name='charName'\n            className=\"char__search-error\"\n            component='div'\n          />\n        </Form>\n      </Formik>\n      {results}\n      {errorMessage}\n    </div>\n  )\n}\n\nexport default CharSearchForm\n","export default __webpack_public_path__ + \"static/media/vision.067d4ae1.png\";","import { Component } from 'react'\n\nimport ErrorMessage from '../errorMessage/ErrorMessage'\n\nclass ErrorBoundary extends Component {\n  state = {\n    error: false\n  }\n\n  componentDidCatch(error, errorInfo) {\n    this.setState({ error: true })\n  }\n\n  render() {\n    if (this.state.error) {\n      return <ErrorMessage/>\n    }\n\n    return this.props.children\n  }\n}\n\nexport default ErrorBoundary\n","import {useState} from 'react'\n\nimport RandomChar from '../randomChar/RandomChar'\nimport CharList from '../charList/CharList'\nimport CharInfo from '../charInfo/CharInfo'\nimport CharSearchForm from '../charSearchForm/CharSearchForm'\n\nimport decoration from '../../resources/img/vision.png'\nimport ErrorBoundary from '../errorBoundary/ErrorBoundary'\n\nfunction MainPage() {\n  const [selectedCharId, setSelectedCharId] = useState(null)\n\n  const onCharSelected = (id) => {\n    setSelectedCharId(id)\n  }\n\n  return (\n    <>\n      <ErrorBoundary>\n        <RandomChar/>\n      </ErrorBoundary>\n      <div className='char__content'>\n        <ErrorBoundary>\n          <CharList onCharSelected={onCharSelected}/>\n        </ErrorBoundary>\n        <div>\n          <ErrorBoundary>\n            <CharInfo charId={selectedCharId}/>\n          </ErrorBoundary>\n          <ErrorBoundary>\n            <CharSearchForm/>\n          </ErrorBoundary>\n        </div>\n      </div>\n      <img className='bg-decoration' src={decoration} alt='vision'/>\n    </>\n  )\n}\n\nexport default MainPage\n","export default __webpack_public_path__ + \"static/media/Avengers.4065c8f9.png\";","export default __webpack_public_path__ + \"static/media/Avengers_logo.9eaf2193.png\";","import './appBanner.scss'\nimport avengers from '../../resources/img/Avengers.png'\nimport avengersLogo from '../../resources/img/Avengers_logo.png'\n\nconst AppBanner = () => {\n  return (\n    <div className='app__banner'>\n      <img src={avengers} alt='Avengers'/>\n      <div className='app__banner-text'>\n        New comics every week!<br/>\n        Stay tuned!\n      </div>\n      <img src={avengersLogo} alt='Avengers logo'/>\n    </div>\n  )\n}\n\nexport default AppBanner\n","import { useEffect, useState } from 'react'\n\nimport { Link } from 'react-router-dom'\n\nimport useMarvelService from '../../services/MarvelService'\nimport Spinner from '../spinner/Spinner'\n\nimport './comicsList.scss'\n\nfunction ComicsList() {\n  const [comicsList, setComicsList] = useState([])\n  const [newItemLoaded, setNewItemLoaded] = useState(false)\n  const [offset, setOffset] = useState(0)\n  const [isListEnded, setIsListEnded] = useState(false)\n\n  const { loading, getAllComics } = useMarvelService()\n\n  useEffect(() => {\n    onRequest(offset, true)\n  }, [])\n\n  const onRequest = (offset, initial) => {\n    initial ? setNewItemLoaded(false) : setNewItemLoaded(true)\n    getAllComics(offset)\n      .then(onComicsLoaded)\n  }\n\n  const onComicsLoaded = (newComicsList) => {\n    let ended = false\n\n    if (newComicsList.length < 8) {\n      ended = true\n    }\n\n    setComicsList(comicsList => [...comicsList, ...newComicsList])\n    setOffset(offset => offset + 8)\n    setIsListEnded(ended)\n  }\n\n  const renderComics = (arr) => {\n    return arr.map(({title, id, price, thumbnail}, index) => (\n      <li className='comics__item' key={index}>\n        <Link to={`/comics/${id}`}>\n          <img src={thumbnail} alt='ultimate war' className='comics__item-img'/>\n          <div className='comics__item-name'>{title}</div>\n          <div className='comics__item-price'>{price}</div>\n        </Link>\n      </li>\n    ))\n  }\n\n  const content = renderComics(comicsList)\n  const spinner = loading && !newItemLoaded ? <Spinner/> : null\n\n  return (\n    <div className='comics__list'>\n      {spinner}\n      <ul className='comics__grid'>\n        {content}\n      </ul>\n      <button\n        className='button button__main button__long'\n        onClick={() => onRequest(offset)}\n        style={{display: isListEnded ? 'none' : 'block'}}\n      >\n        <div className='inner'>load more</div>\n      </button>\n    </div>\n  )\n}\n\nexport default ComicsList\n","import AppBanner from '../appBanner/AppBanner'\nimport ComicsList from '../comicsList/ComicsList'\n\nfunction ComicsPage() {\n  return (\n    <>\n      <AppBanner/>\n      <ComicsList/>\n    </>\n  )\n}\n\nexport default ComicsPage\n","import { useEffect, useState } from 'react'\nimport { useParams } from 'react-router-dom'\n\nimport useMarvelService from '../../services/MarvelService'\nimport ErrorMessage from '../errorMessage/ErrorMessage'\nimport Spinner from '../spinner/Spinner'\nimport AppBanner from '../appBanner/AppBanner'\n\nconst SinglePage = ({ Component, dataType }) => {\n  const { id } = useParams()\n\n  const [data, setData] = useState(null)\n\n  const { loading, error, clearError, getComic, getCharacter } = useMarvelService()\n\n  useEffect(() => {\n    updateData()\n  }, [id])\n\n  const onDataLoaded = (data) => {\n    setData(data)\n  }\n\n  const updateData = () => {\n    clearError()\n\n    switch (dataType) {\n      case 'comic': {\n        getComic(id)\n          .then(onDataLoaded)\n        break\n      }\n      case 'character': {\n        getCharacter(id)\n          .then(onDataLoaded)\n      }\n    }\n  }\n\n  const errorMessage = error ? <ErrorMessage/> : null\n  const spinner = loading ? <Spinner/> : null\n  const content = !(loading || error || !data) ? <Component data={data}/> : null\n\n  return (\n    <>\n      <AppBanner/>\n      {errorMessage}\n      {spinner}\n      {content}\n    </>\n  )\n}\n\nexport default SinglePage\n","import { Link } from 'react-router-dom'\n\nimport './singleComicLayout.scss'\n\nfunction SingleComicLayout({ data }) {\n\n  const { title, thumbnail, description, pageCount, language, price } = data\n\n  return (\n    <div className=\"single-comic\">\n      <img src={thumbnail} alt={title} className=\"single-comic__img\"/>\n      <div className=\"single-comic__info\">\n        <h2 className=\"single-comic__name\">{title}</h2>\n        <p className=\"single-comic__descr\">{description}</p>\n        <p className=\"single-comic__descr\">{pageCount}</p>\n        <p className=\"single-comic__descr\">Language: {language}</p>\n        <div className=\"single-comic__price\">{price}</div>\n      </div>\n      <Link to='/comics' className=\"single-comic__back\">Back to all</Link>\n    </div>\n  )\n}\n\nexport default SingleComicLayout\n","import './singleCharacterLayout.scss'\n\nfunction SingleCharacterLayout({ data }) {\n  const { name, description, thumbnail } = data\n\n  return (\n    <div className=\"single-comic\">\n      <img src={thumbnail} alt={name} className=\"single-comic__char-img\"/>\n      <div className=\"single-comic__info\">\n        <h2 className=\"single-comic__name\">{name}</h2>\n        <p className=\"single-comic__descr\">{description}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default SingleCharacterLayout\n","import { NavLink, Link } from 'react-router-dom'\n\nimport './appHeader.scss'\n\nconst AppHeader = () => {\n  return (\n    <header className='app__header'>\n      <h1 className='app__title'>\n        <Link to='/'>\n          <span>Marvel</span> information portal\n        </Link>\n      </h1>\n      <nav className='app__menu'>\n        <ul>\n          <li><NavLink\n            exact\n            activeStyle={{color: '#9F0013'}}\n            to='/'>\n            Characters\n          </NavLink></li>\n          /\n          <li><NavLink\n            exact\n            activeStyle={{color: '#9F0013'}}\n            to='/comics'>\n            Comics\n          </NavLink></li>\n        </ul>\n      </nav>\n    </header>\n  )\n}\n\nexport default AppHeader;\n","import { BrowserRouter as Router, Switch, Route } from 'react-router-dom'\n\nimport { MainPage, ComicsPage, SinglePage } from '../pages'\nimport { SingleComicLayout, SingleCharacterLayout } from '../pages'\nimport AppHeader from '../appHeader/AppHeader'\n\nfunction App() {\n  return (\n    <Router>\n      <div className='app'>\n        <AppHeader/>\n        <main>\n          <Switch>\n            <Route exact path='/'>\n              <MainPage/>\n            </Route>\n            <Route exact path='/comics'>\n              <ComicsPage/>\n            </Route>\n            <Route exact path='/comics/:id'>\n              <SinglePage Component={SingleComicLayout} dataType='comic'/>\n            </Route>\n            <Route exact path='/characters/:id'>\n              <SinglePage Component={SingleCharacterLayout} dataType='character'/>\n            </Route>\n            <Route exact path='/'/>\n          </Switch>\n        </main>\n      </div>\n    </Router>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\n\nimport App from './components/app/App'\n\nimport './style/style.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App/>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n"],"sourceRoot":""}